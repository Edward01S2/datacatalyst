{"version":3,"file":"/scripts/app.js","mappings":"gIAOIA,EAAOC,EAAX,KAKAC,EAAAA,UAAAA,OAAkB,WAEhBA,EAAAA,wBAAAA,SAAAA,iBAEAA,EAAAA,0BAAAA,SAAAA,0BAEAA,EAAAA,UAAAA,KAAAA,qBAAsC,WACpCA,EAAAA,0BAAAA,SAAAA,6BASCA,EAAAA,gBAAAA,GAAH,aACEC,EAAAA,YAAAA,KAAAA,cAAAA,GAAAA,OAKO,YACLC,QAAAA,MAAAA,MAIJF,EAAAA,UAAAA,KAAAA,qBAAsC,WACpCA,EAAAA,wBAAAA,SAAAA,oBAGFA,EAAAA,kBAAAA,MAAyB,WACvB,IAAIG,EAASH,EAAb,MACII,EAAWD,EAAAA,KAAf,4BACIE,EAAUF,EAAAA,KAAd,uBACIG,EAAUH,EAAAA,KAAd,uBACII,EAAaJ,EAAAA,KAAjB,0BACIK,EAAeL,EAAAA,KAAnB,6BACIM,EAAsBN,EAAAA,KAA1B,sCACIO,EAAsBP,EAAAA,KAA1B,qCAEIQ,EAAUC,OAAd,YAEAR,EAAAA,OAAe,WACX,IAAIS,EAAUb,EAAd,MACIc,EAAMD,EAAAA,KAAV,OACAL,EAAAA,SAAAA,oCAEAJ,EAAAA,YAAAA,mCACAS,EAAAA,SAAAA,mCAEAR,EAAAA,YAAAA,8BACAA,EAAAA,OAAe,cAAgBS,EAA/BT,MAAAA,SAAAA,8BAEAC,EAAAA,YAAAA,8BACAA,EAAAA,OAAe,cAAgBQ,EAA/BR,MAAAA,SAAAA,8BAEAC,EAAAA,YAAAA,iCACAA,EAAAA,OAAkB,gCAAlBA,GAAAA,SAAAA,iCAEAE,EAAAA,KAAyBE,EAAAA,OAAeG,EAAxCL,IACAC,EAAAA,GAAAA,GAAAA,KAA+BC,EAAAA,kBAA0BG,EAA1BH,GAA/BD,SACA,IAAIC,EAAAA,kBAA0BG,EAA1BH,GAAAA,IACAD,EAAAA,GAAAA,GAAAA,KAA+BC,EAAAA,kBAA0BG,EAA1BH,GAA/BD,UAKRV,EAAAA,YAAAA,MAAmB,YAOvB,SAAiB,GAGf,IAAIe,EAAWC,EAAAA,KAHO,WAMlBC,EAAU,CACVC,KAAcF,EAAAA,KAAAA,SADJ,GAEVG,UAAcC,OAAAA,KAAAA,UAAsBC,SAEpCC,EAAM,IAAIF,OAAAA,KAAJ,IAAqBJ,EAArB,GAVY,GAatBM,EAAAA,QAAAA,GACAP,EAAAA,MAAc,YAuBhB,SAAoB,EAApB,GAGE,IAAIQ,EAAMC,EAAAA,KAAV,OACIC,EAAMD,EAAAA,KAAV,OACIE,EAAS,CACTH,IAAKI,WADI,GAETF,IAAKE,WAAW,IAIhBC,EAAS,IAAIR,OAAAA,KAAJ,OAAuB,CAChCS,SADgC,EAEhCP,IAAKA,IAOT,GAHAA,EAAAA,QAAAA,KAjBkC,GAoB9BE,EAAJ,OAAoB,CAGhB,IAAIM,EAAa,IAAIV,OAAAA,KAAJ,WAA2B,CACxCW,QAASP,EAAAA,SAIbJ,OAAAA,KAAAA,MAAAA,YAAAA,EAAAA,SAA+C,WAC3CU,EAAAA,KAAAA,EAAAA,OAnDJE,CAAYhC,EAAF,MAAVgC,MAmEN,SAAmB,GAGjB,IAAIC,EAAS,IAAIb,OAAAA,KAAjB,aACAE,EAAAA,QAAAA,SAAoB,YAChBW,EAAAA,OAAc,CACVV,IAAKK,EAAAA,SADK,MAEVH,IAAKG,EAAAA,SAAAA,WAKb,GAAIN,EAAAA,QAAAA,OACAA,EAAAA,UAAeW,EADU,aAKzBX,EAAAA,UAAAA,GAhFJY,CAnBsB,GANRC,CAASnC,EAAnB,c,qDCjFNoC,EAAOC,QAAUzB,OAAe,Q","sources":["webpack:///./resources/assets/scripts/app.js","webpack:///external window \"jQuery\""],"sourcesContent":["/**\n * External Dependencies\n */\nimport 'jquery';\nimport 'alpinejs';\n\n// import './particles.js'\nvar json = require('./particlesjs.json');\nimport { tsParticles } from \"tsparticles\";\n\n//console.log(json);\n\n$(document).ready(() => {\n  // console.log('Hello world');\n  $('input[type=checkbox]').addClass('form-checkbox');\n\n  $('#gform_2 .gform_footer').appendTo('#gform_2 .gform_fields');\n\n  $(document).bind('gform_post_render', function() {\n    $('#gform_2 .gform_footer').appendTo('#gform_2 .gform_fields');\n  })\n\n  //console.log(particleUrl)\n  // particlesJS.load('particles-js', json, function() {\n  //   console.log('callback - particles.js config loaded');\n  // });\n\n  // console.log($('#tsparticles').is(':visible'))\n  if($('#tsparticles').is(':visible')) {\n    tsParticles\n    .load(\"tsparticles\", json)\n    // .then((container) => {\n    //   // console.log(\"callback - tsparticles config loaded\");\n    // })\n    .catch((error) => {\n      console.error(error);\n    });\n  }\n\n  $(document).bind('gform_post_render', function() {\n    $('input[type=checkbox]').addClass('form-checkbox');\n  })\n\n  $('.rcdcLawsChart').each(function () {\n    var $chart = $(this);\n    var $toggles = $chart.find('.rcdcLawsChartHelpToggle');\n    var $titles = $chart.find('.rcdcLawsChartTitle');\n    var $scores = $chart.find('.rcdcLawsChartScore');\n    var $helpLines = $chart.find('.rcdcLawsChartHelpLine');\n    var $helpDisplay = $chart.find('.rcdcLawsChartHelpDisplay');\n    var $helpDisplayHeading = $chart.find('.rcdcLawsChartHelpDisplay__heading');\n    var $helpDisplayContent = $chart.find('.rcdcLawsChartHelpDisplay_content');\n\n    var phpVars = window.rcdcPhpVars;\n\n    $toggles.click(function () {\n        var $toggle = $(this);\n        var row = $toggle.data('row');\n        $helpDisplay.addClass('rcdcLawsChartHelpDisplay--active');\n\n        $toggles.removeClass('rcdcLawsChartHelpToggle--active');\n        $toggle.addClass('rcdcLawsChartHelpToggle--active');\n\n        $titles.removeClass('rcdcLawsChartTitle--active');\n        $titles.filter('[data-row=\"' + row + '\"]').addClass('rcdcLawsChartTitle--active');\n\n        $scores.removeClass('rcdcLawsChartScore--active');\n        $scores.filter('[data-row=\"' + row + '\"]').addClass('rcdcLawsChartScore--active');\n\n        $helpLines.removeClass('rcdcLawsChartHelpLine--active');\n        $helpLines.filter('.rcdcLawsChartHelpLine--row--' + row).addClass('rcdcLawsChartHelpLine--active');\n\n        $helpDisplayHeading.text(phpVars.titles[row - 1]);\n        $helpDisplayContent.eq(0).text(phpVars.descriptionsLines[row - 1][0]);\n        if (phpVars.descriptionsLines[row - 1][1] !== undefined) {\n            $helpDisplayContent.eq(1).text(phpVars.descriptionsLines[row - 1][1]);\n        }\n      });\n    });\n\n    $('.acf-map').each(function(){\n      var map = initMap( $(this) );\n  });\n\n});\n\n\nfunction initMap( $el ) {\n\n  // Find marker elements within map.\n  var $markers = $el.find('.marker');\n\n  // Create gerenic map.\n  var mapArgs = {\n      zoom        : $el.data('zoom') || 16,\n      mapTypeId   : google.maps.MapTypeId.ROADMAP\n  };\n  var map = new google.maps.Map( $el[0], mapArgs );\n\n  // Add markers.\n  map.markers = [];\n  $markers.each(function(){\n      initMarker( $(this), map );\n  });\n\n  // Center map based on markers.\n  centerMap( map );\n\n  // Return map instance.\n  return map;\n}\n\n/**\n* initMarker\n*\n* Creates a marker for the given jQuery element and map.\n*\n* @date    22/10/19\n* @since   5.8.6\n*\n* @param   jQuery $el The jQuery element.\n* @param   object The map instance.\n* @return  object The marker instance.\n*/\nfunction initMarker( $marker, map ) {\n\n  // Get position from marker.\n  var lat = $marker.data('lat');\n  var lng = $marker.data('lng');\n  var latLng = {\n      lat: parseFloat( lat ),\n      lng: parseFloat( lng )\n  };\n\n  // Create marker instance.\n  var marker = new google.maps.Marker({\n      position : latLng,\n      map: map\n  });\n\n  // Append to reference for later use.\n  map.markers.push( marker );\n\n  // If marker contains HTML, add it to an infoWindow.\n  if( $marker.html() ){\n\n      // Create info window.\n      var infowindow = new google.maps.InfoWindow({\n          content: $marker.html()\n      });\n\n      // Show info window when marker is clicked.\n      google.maps.event.addListener(marker, 'click', function() {\n          infowindow.open( map, marker );\n      });\n  }\n}\n\n/**\n* centerMap\n*\n* Centers the map showing all markers in view.\n*\n* @date    22/10/19\n* @since   5.8.6\n*\n* @param   object The map instance.\n* @return  void\n*/\nfunction centerMap( map ) {\n\n  // Create map boundaries from all map markers.\n  var bounds = new google.maps.LatLngBounds();\n  map.markers.forEach(function( marker ){\n      bounds.extend({\n          lat: marker.position.lat(),\n          lng: marker.position.lng()\n      });\n  });\n\n  // Case: Single marker.\n  if( map.markers.length == 1 ){\n      map.setCenter( bounds.getCenter() );\n\n  // Case: Multiple markers.\n  } else{\n      map.fitBounds( bounds );\n  }\n}","module.exports = window[\"jQuery\"];"],"names":["json","require","$","tsParticles","console","$chart","$toggles","$titles","$scores","$helpLines","$helpDisplay","$helpDisplayHeading","$helpDisplayContent","phpVars","window","$toggle","row","$markers","$el","mapArgs","zoom","mapTypeId","google","ROADMAP","map","lat","$marker","lng","latLng","parseFloat","marker","position","infowindow","content","initMarker","bounds","centerMap","initMap","module","exports"],"sourceRoot":""}